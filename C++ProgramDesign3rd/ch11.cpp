#include<iostream>
#include"ch11.h"

using namespace std;

void ch11() {
	// P369，没有输入/输出语句，带有一个面向对象的输入/输出软件包，就是I/O流类库
	// 11.1 I/O 流的概念及流类库结构
	//     当程序与外界环境进行信息交换时，存在着两个对象：程序中的对象；文件对象
	//     流是一种抽象，负责在数据的生产者和数据的消费者之间建立联系，并且管理数据的流动
	//     程序将流对象看作是文件对象的化身：程序建立一个流对象，并且指定这个流对象与某个文件对象建立连接，程序操作流对象，流对象通过文件系统对所连接的文件对象产生作用。流对象就是程序中的对象与文件对象进行交换的界面，对程序对象而言，文件对象有的特性，流对象也有。
	//     凡是数据从一个地方传输到另一个地方的操作都是流的操作。例如：网络数据交换、文件数据交换、进程数据交换。
	//     （从流中）提取是读操作；（向流中）插入是写操作。
	// 11.2 输出流
	//     最重要的输出流：
	//     -   ostream：向标准设备输出，三个常用的类对象：
	//         -   cout：标准输出
	//         -   cerr：标准错误输出，没有缓冲，发送的内容立即输出
	//         -   clog：标准错误输出，存在缓冲，缓冲区满时输出
	//     -   ofstream：磁盘文件输出
	//     -   ostringstream
	//     11.2.1 构造输出流对象
	//         将信息输出到标准输出设备时，不需要构造输出流；将信息输出到文件，就需要构造输出流
	//     11.2.2 使用插入运算符和操作符
	//     		1.  输出宽度：setw()
	//     		2.  对齐方式：setiosflags(ios_base::)
	//     		3.  精度：setiosflags(ios_base::)
	//     11.2.3 输出文件流成员函数
	//     		三种类型：
	//     			-   与操纵符等价的成员函数
	//     			-   执行非格式化写操作的成员函数
	//     			-   其他修改流状态，并且不同于操纵符或者插入运算符的成员函数
	//     		1.  输出流的 open()
	//     		2.  输出流的 close()
	//     		3.  put()
	//     		4.  write()
	//     		5.  seekp() 和 tellp()
	//     		6.  错误处理函数
	//     11.2.4 二进制输出文件
	// 11.3 输入流：数据流的源头
	// 		三个最重要的输入流类：
	// 		-   istream：用于顺序文本模式输入
	// 		-   ifstream：磁盘文件输入，拥有文本模式和二进制模式
	// 		-   istringstream：
	// 		11.3.1 构造输入流对象
	// 			使用文件流从文件中读取数据，就必须构造一个输入流对象
	// 		11.3.2 使用提取运算符
	// 			提取（extraction）运算符（>>）：用于格式化文本输入，在提取数据时，以空白符为分隔。
	// 		11.3.3 输入流操纵符
	// 		11.3.4 输入流成员函数
	// 			-   open()：输入文件流，在构造函数中使用 open() 函数把该流与特定磁盘文件关联
	// 			-   get()：与提取运算符类似，区别在如何处理空白字符
	// 			-   getline()：允许从输入流中读取多个字符
	// 			-   read()：从文件中读字节到指定的存储器区域
	// 			-   seekg() 和 tellg()：在输入文件流中，保留着一个指向文件中下一个将读数据的内部指针
	// 			-   close()：关闭与某个文件输入流关联的文件
	// 11.4 输入流与输出流
	// 		-   iostream：既可以是输入流，还可以是输出流
	// 		-	fstream：磁盘文件的输入与输出
	// 		-	stringstream

	cout << "===>Ch11<===" << endl;
	src1101();
	src1102();
	src1103();
	src1104();
	src1105();
	src1108();
	src1109();
	src1110();
	//src1106();
	//src1107();	// ToDo:为什么执行src1106()的输入后，就不再执行这个输入呢？
}
